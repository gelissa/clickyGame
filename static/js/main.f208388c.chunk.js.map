{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","onClick","clickCard","Wrapper","children","Title","App","state","friends","selected","correct","score","topScore","shuffleCard","i","length","Math","floor","random","j","id","shuffledArray","setState","cards","includes","concat","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ouFA6BeA,MA1Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAASN,EAAMO,e,MCAhDC,MAJf,SAAiBR,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMS,W,MCG1BC,MAJf,SAAeV,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMS,W,OCgHvBE,E,2MA1GbC,MAAQ,CACJC,UACAC,SAAU,GACVC,QAAS,GACTC,MAAO,EACPC,SAAU,G,EAqBdC,YAAc,SAAAL,GAEZ,IAAK,IAAIM,EAAI,EAAKP,MAAMC,QAAQO,OAAS,EAAGD,EAAI,EAAGA,IAAI,CAE3CE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IAKxC,EAAKP,MAAMC,QAAQM,GAAI,EAAKP,MAAMC,QAAQW,GAAS,EAAKZ,MAAMC,QAAQW,GAAI,EAAKZ,MAAMC,QAAQM,GAEjG,OAAO,EAAKP,MAAMC,S,EAGpBN,UAAY,SAAAkB,GACV,IAAMC,EAAgB,EAAKR,YAAYL,GACvC,EAAKc,SAAS,CAACC,MAAOF,IAClB,EAAKd,MAAME,SAASe,SAASJ,GAC/B,EAAKE,SAAS,CAAEX,MAAO,EAAGF,SAAU,KAElC,EAAKa,SAAS,CACZb,SAAU,EAAKF,MAAME,SAASgB,OAAO,CAACL,IACtCT,MAAO,EAAKJ,MAAMI,MAAQ,IAI5B,EAAKJ,MAAMI,MAAQ,EAAKJ,MAAMK,UAChC,EAAKU,SAAS,CAACV,SAAU,EAAKL,MAAMI,S,wEA2B9B,IAAD,OAEP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,iCAAiCe,KAAKnB,MAAMI,MAA5C,KACCe,KAAKnB,MAAMC,QAAQmB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CAEER,GAAIQ,EAAOR,GACXS,IAAKD,EAAOR,GACZtB,KAAM8B,EAAO9B,KACbE,MAAO4B,EAAO5B,MACdW,MAAO,EAAKJ,MAAMI,MAMlBT,UAAW,EAAKA,oB,GApGV4B,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f208388c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={props.clickCard} />\n      </div>\n      {/* <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div> */}\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n// const friendsArray = friends[i];\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n      friends,\n      selected: [],\n      correct: [],\n      score: 0,\n      topScore: 0\n  };\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // shuffleCard = arr => {\n  //   for (let i = arr.length - 1; i > 0; i--) {\n  //     let j = Math.floor(Math.random() * (i + 1));\n  //     // [arr[i], arr[j] = arr[j], arr[i]];\n  //     const temp = arr[i];\n  //     arr[i] = arr[j];\n  //     arr[j] = temp;\n  //   }\n  //   return arr;\n  // }\n\n  shuffleCard = friends => {\n    // this.setState({ friends: arr })\n    for (let i = this.state.friends.length - 1; i > 0; i--){\n        // eslint-disable-next-line\n       {let j = Math.floor(Math.random() * (i + 1))}\n      // const temp = this.state.friends[i]\n      // this.state.friends[i] = this.state.friends[j]\n      // arr[j] = temp\n      // eslint-disable-next-line\n      [(this.state.friends[i], this.state.friends[j])] == [this.state.friends[j], this.state.friends[i]];\n    }\n    return this.state.friends;\n  }\n\n  clickCard = id => {\n    const shuffledArray = this.shuffleCard(friends);\n    this.setState({cards: shuffledArray});\n    if (this.state.selected.includes(id)) {\n      this.setState({ score: 0, selected: []})\n    } else {\n        this.setState({\n          selected: this.state.selected.concat([id]),\n          score: this.state.score + 1\n        });\n    }\n    \n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score });\n    }\n    // const {selected, friends, correct } = this.state;\n\n    // if (selected.length === 0) {\n    //   this.setState({selected: [id]})\n    // } else if (selected[0] === 1) {\n    //   if (friends[selected[0]] === friends[id]) {\n    //     this.setState({\n    //       correct: correct.concat([selected[0], id]),\n    //       selected: []\n    //     });\n    //   } else {\n    //     this.setState({selected: [selected[0], id] });\n    //     setTimeout(() => {\n    //       this.setState({ selected: [] })\n    //     }, 1500)\n    //   }\n    // }\n    // this.shuffleCard();\n\n    // this.setState({ score: this.state.score + 1 });\n    // this.shuffleCard();\n\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    // const { correct, selected, friends } = this.state;\n    return (\n      <Wrapper>\n        <Title>Can you Remember? score: {this.state.score} </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            // removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            score={this.state.score}\n            // occupation={friend.occupation}\n            // location={friend.location}\n            // isCorrect={correct.includes(i)}\n            // isSelected={selected.includes(i)}\n            // onSelect={() => this.clickCard(i)}\n            clickCard={this.clickCard}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}